public class Board
{
	public static final int ROWS=6;
	public static final int COLS=6;
	int currentRow,currentCol;
	GameState currentState;
	Cell[][] cells;
	public Board()
	{
		cells = new Cell[6][6];
		for(int i=0;i<6;i++)
		{
			for(int j=0;j<6;j++)
			{
				cells[i][j]=new Cell(i,j);
			}
		}
	}
private long[] winningPatterns={
0b000000000000000000000000000000001111L,
0b000000000000000000000000000000011110L,
0b000000000000000000000000000000111100L,
0b000000000000000000000000001111000000L,
0b000000000000000000000000011110000000L,
0b000000000000000000000000111100000000L,
0b000000000000000000001111000000000000L,
0b000000000000000000011110000000000000L,
0b000000000000000000111100000000000000L,
0b000000000000001111000000000000000000L,
0b000000000000011110000000000000000000L,
0b000000000000111100000000000000000000L,
0b000000001111000000000000000000000000L,
0b000000011110000000000000000000000000L,
0b000000111100000000000000000000000000L,
0b001111000000000000000000000000000000L,
0b011110000000000000000000000000000000L,
0b111100000000000000000000000000000000L,

//coloumns
0b000000000000000001000001000001000001L,
0b000000000001000001000001000001000000L,
0b000001000010000001000001000000000000L,
0b000000000000000010000010000010000010L,
0b000000000010000010000010000010000000L,
0b000010000010000010000010000000000000L,
0b000000000000000100000100000100000100L,
0b000000000100000100000100000100000000L,
0b000100000100000100000100000000000000L,
0b000000000000001000001000001000001000L,
0b000000001000001000001000001000000000L,
0b001000001000001000001000000000000000L,
0b000000000000010000010000010000010000L,
0b000000010000010000010000010000000000L,
0b010000010000010000010000000000000000L,
0b000000000000100000100000100000010000L,
0b000000100000100000100000100000000000L,
0b100000100000100000100000000000000000L,

//anti-diagonally
0b000000000000000001000010000100001000L,
0b000000000000000010000100001000010000L,
0b000000000001000010000100001000000000L,
0b000000000000000100001000010000100000L,
0b000000000010000100001000010000000000L,
0b000001000010000100001000000000000000L,
0b000000000100001000010000100000000000L,
0b000010000100001000010000000000000000L,
0b000100001000010000100000000000000000L,

//diagonally
0b00000000000001000000100000010000001L,
0b00000010000001000000100000010000000L,
0b10000010000001000000100000000000000L,
0b00000000000010000001000000100000010L,
0b00000100000010000001000000100000000L,
0b00000000000100000010000001000000100L,
0b00000000100000010000001000000100000L,
0b01000000100000010000001000000000000L,
0b00100000010000001000000100000000000L

};
public boolean gameWon(Color player)
{
	long pattern = 0b00000000000000000000000000000000000L;
	for(int row=0;row<ROWS;row++)
	{
		for(int col=0;col<COLS;col++)
		{
			if(cells[row][col].content==player)
			{
				pattern |= (1<<(row*COLS+col));
			}
		}
	}
	for(long winningPattern:winningPatterns)
	{
		if((pattern&winningPattern)==winningPattern) return true;
	}
	return false;
}

	public boolean isDraw()
	{
		for (int rows=0;rows<ROWS;rows++)
		for(int col=0;col<COLS;col++)
		if(cells[rows][col].content==Color.EMPTY)
		return false;
		return true;
	}

	public void paint()
	{
		System.out.println("\n//////////////////\n");
		for(int rows=0;rows<6;rows++)
		{
			for(int col=0;col<6;col++)
			{
				cells[rows][col].paint();
				System.out.print("|");
			}
			System.out.println();
			System.out.print(".............................");
			System.out.println();
		}
	}
}
